/***********************************************************************
 *          {{rootname}}.js
 *
 *          {{description}}
 *
 *          Copyright (c) {{__year__}}, {{author}}.
 *          All Rights Reserved.
 ***********************************************************************/
(function (exports) {
    "use strict";

    /************************************************************
     *  Configuration (C attributes)
     *  Attributes without an underscore prefix
     *      will be set in self.config
     *  Attributes with underscore ("_") prefix:
     *      will be set in self.private
     ************************************************************/
    let CONFIG = {
        //////////////// Public Attributes //////////////////
        subscriber: null,       // subscriber of publishing messages

        /*
         *  Helpers of Bulma tabs
         *  Style:                   is-boxed
         *  Sizes:                   is-small is-medium is-large
         *  Alignment:               is-centered is-right
         *  Mutually exclusive:      is-toggle is-toggle-rounded
         *  Whole width available:   is-fullwidth
         */
        tabs_style: "is-toggle is-fullwidth",

        $container: null,       // HTMLElement root, show/hide managed by external routing
        $current_item: null,    // Current item selected
        last_selection: null,   // Last href received

        //////////////// Private Attributes /////////////////
    };




                    /***************************
                     *      Commands
                     ***************************/




    /************************************************************
     *
     ************************************************************/
    function cmd_help(self, cmd, kw, src)
    {
        let webix = {
            "result": 0,
            "comment": "",
            "schema": null,
            "data": null
        };
        return webix;
    }




                    /***************************
                     *      Local Methods
                     ***************************/




    /************************************************************
     *   Build UI
     ************************************************************/
    function build_ui(self)
    {
        /*----------------------------------------------*
         *  Layout Schema
         *----------------------------------------------*/
        self.config.$container = createElement(
            ['div', {class: `tabs ${self.config.tabs_style}`}, [
                ['ul', {}]
            ]]
        );
    }

    /************************************************************
     *   Destroy UI
     ************************************************************/
    function destroy_ui(self)
    {
        if(self.config.$container) {
            if(self.config.$container.parentNode) {
                self.config.$container.parentNode.removeChild(self.config.$container);
            }
            self.config.$container = null;
        }
    }

    /************************************************************
     *   Add tab
     ************************************************************/
    function add_tab(self, id, text, icon)
    {
        let $tabs = self.config.$container.querySelector('ul');

        /*
         *  Create li a
         */
        let $item = createElement(
            ['li', {class: ''}, [ // is-active
                ['a', {href: id}]
            ]]
        );
        $tabs.appendChild($item);

        /*
         *  Add icon/text to a
         */
        let $a = $item.querySelector('a');

        /*
         *  Add icon
         */
        if(icon) {
            $a.appendChild(
                createElement(
                    ['span', {class: 'icon is-small'},
                        ['i', {class: `${icon}`}]
                    ]
                )
            );
        }

        /*
         *  Add text
         */
        $a.appendChild(
            createElement(['span', {i18n: text, class: 'is-hidden-mobile'}, text])
        );
    }

    /************************************************************
     *   Destroy UI
     ************************************************************/
    function remove_tab(self, id)
    {
        let $a = self.config.$container.querySelector(`a[href="${id}"]`);
        if($a) {
            let $li = $a.parentNode;
            if($li) {
                $li.classList.remove('is-active');
                if($li.parentNode) {
                    $li.parentNode.removeChild($li);
                }
            }
        }
    }




                    /***************************
                     *      Actions
                     ***************************/




    /************************************************************
     *      {
     *          href: href
     *      }
     *
     *  WARNING href is the full path,
     *  the path relative to this gobj is the right part of split href by '?'
     ************************************************************/
    function ac_show(self, event, kw, src)
    {
        let href = kw.href;

        let $a = self.config.$container.querySelector(`a[href="${href}"]`);
        if($a) {
            /*
             *  href pointing to inside gobj (with ? right part)
             */
            if(self.config.$current_item) {
                self.config.$current_item.classList.remove('is-active');
            }
            self.config.$current_item = $a.parentNode;
            self.config.$current_item.classList.add('is-active');
        } else {
            /*
             *  href pointing without ? right part, select the first item
             */
            if(!self.config.$current_item) {
                // Get the first item
                self.config.$current_item = self.config.$container.querySelector(`li`);
            }
            if(self.config.$current_item) {
                self.config.$current_item.classList.add('is-active');
            }
        }

        /*
         *  Save last selection, the topics can be not arrived yet.
         */
        self.config.last_selection = href;

        return 0;
    }

    /************************************************************
     *
     ************************************************************/
    function ac_hide(self, event, kw, src)
    {
        if(self.config.$current_item) {
            self.config.$current_item.classList.remove('is-active');
        }
        return 0;
    }




                    /***************************
                     *      GClass/Machine
                     ***************************/




    let FSM = {
        "event_list": [
            "EV_SHOW",
            "EV_HIDE",
            "EV_TIMEOUT"
        ],
        "state_list": [
            "ST_IDLE"
        ],
        "machine": {
            "ST_IDLE":
            [
                ["EV_SHOW",                 ac_show,                undefined],
                ["EV_HIDE",                 ac_hide,                undefined]
            ]
        }
    };

    let {{Rootname}} = GObj.__makeSubclass__();
    let proto = {{Rootname}}.prototype; // Easy access to the prototype
    proto.__init__= function(name, kw) {
        GObj.prototype.__init__.call(
            this,
            FSM,
            CONFIG,
            name,
            "{{Rootname}}",
            kw,
            0
        );
        return this;
    };
    gobj_register_gclass({{Rootname}}, "{{Rootname}}");




                    /***************************
                     *      Framework Methods
                     ***************************/




    /************************************************************
     *      Framework Method create
     ************************************************************/
    proto.mt_create = function(kw)
    {
        let self = this;

        /*
         *  Child model? subscriber is the parent
         */
        if(!self.config.subscriber) {
            self.config.subscriber = self.gobj_parent();  // Remove if not child model
        }
        if(self.config.subscriber) {
            self.gobj_subscribe_event(null, {}, self.config.subscriber);
        }

        build_ui(self);
    };

    /************************************************************
     *      Framework Method destroy
     *      In this point, all childs
     *      and subscriptions are already deleted.
     ************************************************************/
    proto.mt_destroy = function()
    {
        let self = this;
        destroy_ui(self);
    };

    /************************************************************
     *      Framework Method start
     ************************************************************/
    proto.mt_start = function(kw)
    {
        let self = this;

        let id = `${self.gobj_name()}?sample`;
        add_tab(self, id, "sample", "fa-regular fa-table");
    };

    /************************************************************
     *      Framework Method stop
     ************************************************************/
    proto.mt_stop = function(kw)
    {
        let self = this;
        let id = `${self.gobj_name()}?sample`;
        remove_tab(self, id);
    };

    /************************************************************
     *      Framework Method stats
     ************************************************************/
    proto.mt_stats = function(stats, kw, src)
    {
        let self = this;

        return {};
    };

    /************************************************************
     *      Framework Method command
     ************************************************************/
    proto.mt_command = function(command, kw, src)
    {
        let self = this;
        switch(command) {
            case "help":
                return cmd_help(self, command, kw, src);
            default:
                log_error("Command not found: %s", command);
                let webix = {
                    "result": -1,
                    "comment": sprintf("Command not found: %s", command),
                    "schema": null,
                    "data": null
                };
                return webix;
        }
    };


    //=======================================================================
    //      Expose the class via the global object
    //=======================================================================
    exports.{{Rootname}} = {{Rootname}};

})(this);
